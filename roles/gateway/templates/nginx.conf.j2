#-------------------------
#  Security Framework
#-------------------------

server {
    listen 80;
    root /usr/share/nginx/html;

    location / {
        # Show the login page if no valid auth cookie exists.
        if ($cookie_auth != $auth_token) {
            rewrite ^ /login.html break;
        }
    }

    location = /login {
        # Ask for a username / password in exchange for the auth cookie.
        auth_basic           "Restricted Area";
        auth_basic_user_file /etc/nginx/htpasswd;

        # Because "return" are executed _before_ the auth_basic directive.
        try_files DUMMY @return_index;
    }

    location @return_index {
        # Place the auth cookie for 1 day.
        add_header Set-Cookie "auth=$auth_token; Max-Age=86400; HttpOnly";

        return 307 /;
    }

    location = /logout {
        # Delete the auth cookie from the browser.
        add_header Set-Cookie "auth=none; Max-Age=0; HttpOnly";

        return 307 /;
    }
}

map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
}

#-------------------------
#  Zigbee2MQTT
#-------------------------

upstream z2m {
    server 127.0.0.1:8080;
}

server {
    listen 8001;

    # Do not serve upstream if no auth cookie exists.
    if ($cookie_auth != $auth_token) {
        return 503;
    }

    location / {
        proxy_pass http://z2m;
    }

    # Websocket
    location /api {
        proxy_pass http://z2m;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        proxy_set_header Host $host;
    }
}

#-------------------------
#  Homebridge
#-------------------------

upstream homebridge {
    server 127.0.0.1:8581;
}

server {
    listen 8002;

    # Do not serve upstream if no auth cookie exists.
    if ($cookie_auth != $auth_token) {
        return 503;
    }

    location / {
        proxy_pass http://homebridge;
    }

    # Websocket
    location /socket.io {
        proxy_pass http://homebridge;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        proxy_set_header Host $host;
    }
}

#-------------------------
#  Node-RED
#-------------------------

upstream nodered {
    server 127.0.0.1:1880;
}

server {
    listen 8003;

    # Do not serve upstream if no auth cookie exists.
    if ($cookie_auth != $auth_token) {
        return 503;
    }

    location / {
        proxy_pass http://nodered;
    }

    # Websocket
    location /comms {
        proxy_pass http://nodered;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        proxy_set_header Host $host;
    }
}
